{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('This is error');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []); // const [userIngredients, setUserIngredients] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      header: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.jon`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients => prevIngredients.filter(ingredient => ingredient.id !== ingredientId));\n    }).catch(error => {\n      setError('Error Message Here');\n      setIsLoading(false);\n    });\n  };\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \"), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useCallback","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","setIsLoading","useState","error","setError","addIngredientHandler","fetch","method","body","JSON","stringify","header","then","response","json","responseData","setUserIngredients","prevIngredients","name","removeIngredientHandler","ingredientId","catch","filteredIngredientsHandler","filteredIngredients","clearError"],"mappings":"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","sourcesContent":["import React, { useReducer, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient]\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default: throw new Error('This is error');\n  }\n}\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  // const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      header: { 'Content-Type': 'application/json' }\n    })\n      .then(response => {\n        setIsLoading(false);\n        return response.json();\n      })\n      .then(responseData => {\n        setUserIngredients(prevIngredients => [\n          ...prevIngredients,\n          { id: responseData.name, ...ingredient }\n        ]);\n      });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.jon`,\n      { method: 'DELETE' })\n      .then(response => {\n        setIsLoading(false);\n        setUserIngredients(prevIngredients =>\n          prevIngredients.filter((ingredient) => ingredient.id !== ingredientId)\n        );\n      }).catch(error => {\n        setError('Error Message Here');\n        setIsLoading(false);\n      })\n  };\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError} > {error} </ErrorModal>}\n\n      <IngredientForm onAddIngredient={addIngredientHandler} loading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}