{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useEffect, useCallback, useMemo } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nimport useHttp from '../hooks/http';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('Should not reach here');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest\n  } = useHttp();\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({\n      type: 'SET',\n      ingredients: filteredIngredients\n    });\n  }, []);\n  const addIngredientHandler = useCallback(ingredient => {// dispatchHttp({ type: 'SEND' })\n    // fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify(ingredient),\n    //   headers: { 'Content-Type': 'application/json' }\n    // })\n    //   .then(response => {\n    //     dispatchHttp({ type: 'RESPONSE' })\n    //     return response.json();\n    //   })\n    //   .then(responseData => {\n    //     dispatch({ type: 'ADD', ingredient: { id: responseData.name, ...ingredient } });\n    //   });\n  }, []);\n  const removeIngredientHandler = useCallback(ingredientId => {\n    sendRequest(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`, 'DELETE');\n  }, [sendRequest]);\n  const clearError = useCallback(() => {// dispatchHttp({ type: 'CLEAR' })\n  }, []);\n  const ingredientList = useMemo(() => {\n    return /*#__PURE__*/React.createElement(IngredientList, {\n      ingredients: userIngredients,\n      onRemoveItem: removeIngredientHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }, [userIngredients, removeIngredientHandler]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), ingredientList));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useEffect","useCallback","useMemo","IngredientForm","IngredientList","ErrorModal","Search","useHttp","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","error","data","sendRequest","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","removeIngredientHandler","ingredientId","clearError","ingredientList"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useCallback, useMemo } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nimport useHttp from '../hooks/http';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should not reach here');\n  }\n}\n\nconst Ingredients = () => {\n\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const { isLoading, error, data, sendRequest } = useHttp();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({ type: 'SET', ingredients: filteredIngredients });\n  }, []);\n\n  const addIngredientHandler = useCallback(ingredient => {\n\n    // dispatchHttp({ type: 'SEND' })\n    // fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify(ingredient),\n    //   headers: { 'Content-Type': 'application/json' }\n    // })\n    //   .then(response => {\n\n    //     dispatchHttp({ type: 'RESPONSE' })\n    //     return response.json();\n    //   })\n    //   .then(responseData => {\n\n    //     dispatch({ type: 'ADD', ingredient: { id: responseData.name, ...ingredient } });\n    //   });\n  }, []);\n\n  const removeIngredientHandler = useCallback(ingredientId => {\n    sendRequest(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`, 'DELETE')\n  }, [sendRequest]);\n\n  const clearError = useCallback(() => {\n\n    // dispatchHttp({ type: 'CLEAR' })\n  }, []);\n\n  const ingredientList = useMemo(() => {\n    return (\n      <IngredientList\n        ingredients={userIngredients}\n        onRemoveItem={removeIngredientHandler}\n      />\n    )\n  }, [userIngredients, removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}