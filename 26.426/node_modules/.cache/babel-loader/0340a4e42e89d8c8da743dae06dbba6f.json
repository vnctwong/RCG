{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Search.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Card from '../UI/Card';\nimport useHttp from '../hooks/http';\nimport './Search.css';\nconst Search = React.memo(props => {\n  const {\n    onLoadIngredients\n  } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const {\n    isLoading,\n    data,\n    error,\n    sendRequest,\n    clear\n  } = useHttp();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json' + query, 'GET');\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Filter by Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    value: enteredFilter,\n    onChange: event => setEnteredFilter(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Search.js"],"names":["React","useState","useEffect","useRef","Card","useHttp","Search","memo","props","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","isLoading","data","error","sendRequest","clear","timer","setTimeout","current","value","query","length","clearTimeout","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAGN,KAAK,CAACO,IAAN,CAAWC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMW,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA;AAAvC,MAAiDZ,OAAO,EAA9D;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,UAAIT,aAAa,KAAKE,QAAQ,CAACQ,OAAT,CAAiBC,KAAvC,EAA8C;AAC5C,cAAMC,KAAK,GACTZ,aAAa,CAACa,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAmC,6BAA4Bb,aAAc,GAD/E;AAGAM,QAAAA,WAAW,CAAC,oEAAoEM,KAArE,EAA4E,KAA5E,CAAX;AAID;AACF,KAVuB,EAUrB,GAVqB,CAAxB;AAWA,WAAO,MAAM;AACXE,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,KAFD;AAGD,GAfQ,EAeN,CAACR,aAAD,EAAgBD,iBAAhB,EAAmCG,QAAnC,CAfM,CAAT;AAiBA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,aAHT;AAIE,IAAA,QAAQ,EAAEe,KAAK,IAAId,gBAAgB,CAACc,KAAK,CAACC,MAAN,CAAaL,KAAd,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAeD,CAtCc,CAAf;AAwCA,eAAef,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport useHttp from '../hooks/http';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const { isLoading, data, error, sendRequest, clear } = useHttp();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n\n        sendRequest('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json' + query, 'GET')\n\n\n\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => setEnteredFilter(event.target.value)}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}