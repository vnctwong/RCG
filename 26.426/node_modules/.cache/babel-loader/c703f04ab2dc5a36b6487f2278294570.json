{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Search.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Card from '../UI/Card';\nimport './Search.css';\nconst Search = React.memo(props => {\n  const {\n    onLoadIngredients\n  } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  useEffect(() => {\n    setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch('https://hooks-prac-default-rtdb.firebaseio.com/ingredients.json' + query).then(response => response.json()).then(responseData => {\n          const loadedIngredients = [];\n\n          for (const key in responseData) {\n            loadedIngredients.push({\n              id: key,\n              title: responseData[key].title,\n              amount: responseData[key].amount\n            });\n          }\n\n          onLoadIngredients(loadedIngredients);\n        });\n      }\n    }, 500);\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Filter by Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    value: enteredFilter,\n    onChange: event => enteredFilter(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Search.js"],"names":["React","useState","useEffect","useRef","Card","Search","memo","props","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","setTimeout","current","value","query","length","fetch","then","response","json","responseData","loadedIngredients","key","push","id","title","amount","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAGL,KAAK,CAACM,IAAN,CAAWC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMU,QAAQ,GAAGR,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIH,aAAa,KAAKE,QAAQ,CAACE,OAAT,CAAiBC,KAAvC,EAA8C;AAC5C,cAAMC,KAAK,GAAGN,aAAa,CAACO,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAmC,6BAA4BP,aAAc,GAA3F;AACAQ,QAAAA,KAAK,CAAC,oEAAoEF,KAArE,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,gBAAMC,iBAAiB,GAAG,EAA1B;;AACA,eAAK,MAAMC,GAAX,IAAkBF,YAAlB,EAAgC;AAC9BC,YAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACrBC,cAAAA,EAAE,EAAEF,GADiB;AAErBG,cAAAA,KAAK,EAAEL,YAAY,CAACE,GAAD,CAAZ,CAAkBG,KAFJ;AAGrBC,cAAAA,MAAM,EAAEN,YAAY,CAACE,GAAD,CAAZ,CAAkBI;AAHL,aAAvB;AAKD;;AACDnB,UAAAA,iBAAiB,CAACc,iBAAD,CAAjB;AACD,SAZH;AAaD;AACF,KAjBS,EAiBP,GAjBO,CAAV;AAkBD,GAnBQ,EAmBN,CAACb,aAAD,EAAgBD,iBAAhB,EAAmCG,QAAnC,CAnBM,CAAT;AAqBA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,aAHT;AAIE,IAAA,QAAQ,EAAEmB,KAAK,IAAInB,aAAa,CAACmB,KAAK,CAACC,MAAN,CAAaf,KAAd,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAcD,CAxCc,CAAf;AA0CA,eAAeT,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch('https://hooks-prac-default-rtdb.firebaseio.com/ingredients.json' + query)\n          .then(response => response.json())\n          .then(responseData => {\n            const loadedIngredients = [];\n            for (const key in responseData) {\n              loadedIngredients.push({\n                id: key,\n                title: responseData[key].title,\n                amount: responseData[key].amount\n              });\n            }\n            onLoadIngredients(loadedIngredients);\n          });\n      }\n    }, 500);\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => enteredFilter(event.target.value)} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}