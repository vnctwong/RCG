{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useState, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('Should not reach here');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []); // const [userIngredients, setUserIngredients] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {// setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-update.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-update.firebaseio.com/ingredients/${ingredientId}.jon`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients => prevIngredients.filter(ingredient => ingredient.id !== ingredientId));\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useState","useEffect","useCallback","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","setIsLoading","error","setError","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","setUserIngredients","prevIngredients","name","removeIngredientHandler","ingredientId","catch","clearError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,OAApE;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,kBAAD,EAAqBC,MAArB,KAAgC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOD,MAAM,CAACE,WAAd;;AACF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGH,kBAAJ,EAAwBC,MAAM,CAACG,UAA/B,CAAP;;AACF,SAAK,QAAL;AACE,aAAOJ,kBAAkB,CAACK,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWN,MAAM,CAACM,EAAnD,CAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AARJ;AAUD,CAXD;;AAaA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,eAAD,EAAkBC,QAAlB,IAA8BpB,UAAU,CAACQ,iBAAD,EAAoB,EAApB,CAA9C,CADwB,CAExB;;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCP,eAArC;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,QAAMQ,0BAA0B,GAAGxB,WAAW,CAACyB,mBAAmB,IAAI,CACpE;AAED,GAH6C,EAG3C,EAH2C,CAA9C;;AAKA,QAAMC,oBAAoB,GAAGhB,UAAU,IAAI;AACzCS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,KAAK,CAAC,4DAAD,EAA+D;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,UAAf,CAF4D;AAGlEsB,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHyD,KAA/D,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAI;AAChBf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,aAAOe,QAAQ,CAACC,IAAT,EAAP;AACD,KARH,EASGF,IATH,CASQG,YAAY,IAAI;AACpBC,MAAAA,kBAAkB,CAACC,eAAe,IAAI,CACpC,GAAGA,eADiC,EAEpC;AAAEzB,QAAAA,EAAE,EAAEuB,YAAY,CAACG,IAAnB;AAAyB,WAAG7B;AAA5B,OAFoC,CAApB,CAAlB;AAID,KAdH;AAeD,GAjBD;;AAmBA,QAAM8B,uBAAuB,GAAGC,YAAY,IAAI;AAC9CtB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,KAAK,CACF,yDAAwDc,YAAa,MADnE,EAEH;AACEb,MAAAA,MAAM,EAAE;AADV,KAFG,CAAL,CAKEK,IALF,CAKOC,QAAQ,IAAI;AACjBf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAkB,MAAAA,kBAAkB,CAACC,eAAe,IAChCA,eAAe,CAAC3B,MAAhB,CAAuBD,UAAU,IAAIA,UAAU,CAACG,EAAX,KAAkB4B,YAAvD,CADgB,CAAlB;AAGD,KAVD,EAUGC,KAVH,CAUStB,KAAK,IAAI;AAChBC,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAbD;AAcD,GAhBD;;AAkBA,QAAMwB,UAAU,GAAG,MAAM;AACvBtB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,iBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEuB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCvB,KAAlC,CADZ,eAGE,oBAAC,cAAD;AACE,IAAA,eAAe,EAAEM,oBADnB;AAEE,IAAA,OAAO,EAAER,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,iBAAiB,EAAEM,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAER,eADf;AAEE,IAAA,YAAY,EAAEwB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADF;AAkBD,CA1ED;;AA4EA,eAAezB,WAAf","sourcesContent":["import React, { useReducer, useState, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should not reach here');\n  }\n}\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  // const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-update.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(response => {\n        setIsLoading(false);\n        return response.json();\n      })\n      .then(responseData => {\n        setUserIngredients(prevIngredients => [\n          ...prevIngredients,\n          { id: responseData.name, ...ingredient }\n        ]);\n      });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(\n      `https://react-hooks-update.firebaseio.com/ingredients/${ingredientId}.jon`,\n      {\n        method: 'DELETE'\n      }\n    ).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients =>\n        prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      );\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n  }\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}