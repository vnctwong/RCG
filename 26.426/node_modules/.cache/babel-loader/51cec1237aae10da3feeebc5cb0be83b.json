{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useState, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('should nto get here');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []); // const [userIngredients, setUserIngredients] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      header: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      // setUserIngredients(prevIngredients => [\n      //   ...prevIngredients,\n      //   { id: responseData.name, ...ingredient }\n      // ]);\n      dispatch({\n        type: 'ADD',\n        ingredient: {\n          id: responseData.name,\n          ...ingredient\n        }\n      });\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false); // setUserIngredients(prevIngredients =>\n      //   prevIngredients.filter((ingredient) => ingredient.id !== ingredientId)\n      // );\n\n      dispatch({\n        type: 'DELETE',\n        id: ingredientId\n      });\n    }).catch(error => {\n      setError('Error Message Here');\n      setIsLoading(false);\n    });\n  };\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({\n      type: 'SET',\n      ingredients: filteredIngredients\n    });\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \"), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useState","useEffect","useCallback","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","setIsLoading","error","setError","addIngredientHandler","fetch","method","body","JSON","stringify","header","then","response","json","responseData","name","removeIngredientHandler","ingredientId","catch","filteredIngredientsHandler","filteredIngredients","clearError"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('should nto get here');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  // const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://rcg-26-426-default-rtdb.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      header: { 'Content-Type': 'application/json' }\n    })\n      .then(response => {\n        setIsLoading(false);\n        return response.json();\n      })\n      .then(responseData => {\n        // setUserIngredients(prevIngredients => [\n        //   ...prevIngredients,\n        //   { id: responseData.name, ...ingredient }\n        // ]);\n        dispatch({ type: 'ADD', ingredient: { id: responseData.name, ...ingredient } })\n      });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://rcg-26-426-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n      { method: 'DELETE' })\n      .then(response => {\n        setIsLoading(false);\n        // setUserIngredients(prevIngredients =>\n        //   prevIngredients.filter((ingredient) => ingredient.id !== ingredientId)\n        // );\n        dispatch({ type: 'DELETE', id: ingredientId });\n      }).catch(error => {\n        setError('Error Message Here');\n        setIsLoading(false);\n      })\n  };\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({ type: 'SET', ingredients: filteredIngredients });\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError} > {error} </ErrorModal>}\n\n      <IngredientForm onAddIngredient={addIngredientHandler} loading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}