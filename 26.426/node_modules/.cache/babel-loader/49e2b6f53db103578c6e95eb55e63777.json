{"ast":null,"code":"var _jsxFileName = \"/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/IngredientForm.js\";\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({\n      title: enteredTitle,\n      amount: enteredAmount\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ingredient-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: enteredTitle,\n    onChange: event => {\n      setEnteredTitle(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    value: enteredAmount,\n    onChange: event => {\n      setEnteredAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-form__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Add Ingredient\"), props.loading ? /*#__PURE__*/React.createElement(LoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }\n  }) : null))));\n});\nexport default IngredientForm;","map":{"version":3,"sources":["/Users/vwmac/Projects/RCG/26.426/src/components/Ingredients/IngredientForm.js"],"names":["React","useState","Card","LoadingIndicator","IngredientForm","memo","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","submitHandler","event","preventDefault","onAddIngredient","title","amount","target","value","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAO,sBAAP;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAI;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,KAAK,CAACQ,eAAN,CAAsB;AAAEC,MAAAA,KAAK,EAAER,YAAT;AAAuBS,MAAAA,MAAM,EAAEP;AAA/B,KAAtB;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAEJ,YAHT;AAIE,IAAA,QAAQ,EAAEK,KAAK,IAAI;AACjBJ,MAAAA,eAAe,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAf;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,KAAK,EAAET,aAHT;AAIE,IAAA,QAAQ,EAAEG,KAAK,IAAI;AACjBF,MAAAA,gBAAgB,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAhB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,eAuBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGZ,KAAK,CAACa,OAAN,gBAAgB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,GAAuC,IAF1C,CAvBF,CADF,CADF,CADF;AAkCD,CA3CsB,CAAvB;AA6CA,eAAef,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={event => {\n                setEnteredTitle(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading ? <LoadingIndicator /> : null}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n"]},"metadata":{},"sourceType":"module"}